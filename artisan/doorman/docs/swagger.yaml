definitions:
  types.Command:
    properties:
      description:
        description: the command description
        example: scan files in specified path
        type: string
      errorRegex:
        description: a regex used to determine if the command execution has errored
        example: '.*Infected files: [^0].*'
        type: string
      name:
        description: a unique name for the command
        example: clamscan
        type: string
      stopOnError:
        description: determines if the process should stop on a command execution
          error
        example: true
        type: boolean
      value:
        description: the value of the command
        example: freshclam && clamscan -r ${path}
        type: string
    type: object
  types.Key:
    properties:
      description:
        description: a description of the intended use of the key
        type: string
      is_private:
        description: indicates if the key is private, otherwise public
        type: boolean
      name:
        description: a unique identifier for the digital key
        type: string
      owner:
        description: the name of the entity owning the key
        type: string
      value:
        description: the actual content of the key
        type: string
    type: object
info:
  contact:
    email: onix@gatblau.org
    name: gatblau
    url: http://onix.gatblau.org/
  description: Transfer (pull, verify, scan, resign and push) artefacts between networks
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Artisan's Doorman
  version: 0.0.4
paths:
  /:
    get:
      description: |-
        Checks that the HTTP server is listening on the required port.
        Use a liveliness probe.
        It does not guarantee the server is ready to accept calls.
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Check that the HTTP API is live
      tags:
      - General
  /command:
    put:
      description: creates  a new command
      parameters:
      - description: the data for the command to persist
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/types.Command'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new command
      tags:
      - Commands
  /key:
    put:
      description: uploads a new key used by doorman for cryptographic operations
      parameters:
      - description: the data for the key to persist
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/types.Key'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Upload a new key
      tags:
      - Keys
swagger: "2.0"
