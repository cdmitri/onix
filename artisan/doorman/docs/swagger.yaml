definitions:
  types.Command:
    properties:
      description:
        description: the command description
        example: scan files in specified path
        type: string
      errorRegex:
        description: a regex used to determine if the command execution has errored
        example: '.*Infected files: [^0].*'
        type: string
      name:
        description: a unique name for the command
        example: clamscan
        type: string
      stopOnError:
        description: determines if the process should stop on a command execution
          error
        example: true
        type: boolean
      value:
        description: the value of the command
        example: freshclam && clamscan -r ${path}
        type: string
    type: object
  types.ImageRegistry:
    properties:
      pwd:
        description: Pwd the password to authenticate with the container image registry
        type: string
      uri:
        description: URI the location of the container image registry
        example: images.acme.com:5000
        type: string
      user:
        description: User the username to authenticate with the container image registry
        type: string
    type: object
  types.InRoute:
    properties:
      description:
        description: Description a description indicating the purpose of the route
        example: the inbound route for supplier A
        type: string
      name:
        description: Name the name of the route
        example: SUPPLIER_A_IN_ROUTE
        type: string
      public_key:
        description: PublicKey the PGP public key used to verify the author of the
          downloaded files
        type: string
      pwd:
        description: Pwd the password to authenticate against the remote URI
        type: string
      uri:
        description: URI the remote URI from where inbound files should be downloaded
        example: s3.supplier-a.com
        type: string
      user:
        description: User the username to authenticate against the remote URI
        type: string
      verify:
        description: Verify a flag indicating whether author verification should be
          enabled
        type: boolean
    type: object
  types.Key:
    properties:
      description:
        description: a description of the intended use of the key
        type: string
      is_private:
        description: indicates if the key is private, otherwise public
        type: boolean
      name:
        description: a unique identifier for the digital key
        type: string
      owner:
        description: the name of the entity owning the key
        type: string
      value:
        description: the actual content of the key
        type: string
    type: object
  types.OutRoute:
    properties:
      description:
        description: Description describes the purpose of the route
        example: outbound route for ACME company logistics department
        type: string
      image_registry:
        $ref: '#/definitions/types.ImageRegistry'
      name:
        description: Name the name uniquely identifying the outbound route
        example: ACME_OUT_LOGISTICS
        type: string
      package_registry:
        $ref: '#/definitions/types.PackageRegistry'
    type: object
  types.PackageRegistry:
    properties:
      private_key:
        description: PrivateKey the name of the private PGP key used to re-sign the
          packages
        example: SIGNING_KEY_01
        type: string
      pwd:
        description: Pwd the password to authenticate with the package registry
        example: d8y2b9fc97y23!$^
        type: string
      sign:
        description: Sign a flag indicating whether packages pushed to the registry
          should be resigned
        example: true
        type: boolean
      uri:
        description: URI the location of the package registry
        example: packages.acme.com:8082
        type: string
      user:
        description: User the username to authenticate with the package registry
        example: test_user
        type: string
    type: object
  types.Pipeline:
    properties:
      commands:
        description: Commands a list of the command names to be executed between inbound
          and outbound routes
        items:
          type: string
        type: array
      inboundRoute:
        description: InboundRoute  the name of the inbound route to use in the pipeline
        type: string
      name:
        description: Name the name uniquely identifying the pipeline
        example: ACME_PIPELINE
        type: string
      outboundRoute:
        description: OutboundRoute  the name of the outbound route to use in the pipeline
        type: string
    type: object
info:
  contact:
    email: onix@gatblau.org
    name: gatblau
    url: http://onix.gatblau.org/
  description: Transfer (pull, verify, scan, resign and push) artefacts between networks
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Artisan's Doorman
  version: 0.0.4
paths:
  /:
    get:
      description: |-
        Checks that the HTTP server is listening on the required port.
        Use a liveliness probe.
        It does not guarantee the server is ready to accept calls.
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Check that the HTTP API is live
      tags:
      - General
  /command:
    put:
      description: creates or updates a command
      parameters:
      - description: the data for the command to persist
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/types.Command'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates or updates a command
      tags:
      - Commands
  /key:
    put:
      description: |-
        creates or updates a cryptographic key used by either inbound or outbound routes to verify or sign
        packages respectively
      parameters:
      - description: the data for the key to persist
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/types.Key'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates or updates a cryptographic key
      tags:
      - Keys
  /pipe:
    put:
      description: creates or updates an inbound route
      parameters:
      - description: the data for the pipeline to persist
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/types.Pipeline'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates or updates an inbound route
      tags:
      - Pipelines
  /route/in:
    put:
      description: creates or updates an inbound route
      parameters:
      - description: the data for the inbound route to persist
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/types.InRoute'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates or updates an inbound route
      tags:
      - Routes
  /route/out:
    put:
      description: creates or updates an inbound route
      parameters:
      - description: the data for the outbound route to persist
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/types.OutRoute'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates or updates an inbound route
      tags:
      - Routes
swagger: "2.0"
