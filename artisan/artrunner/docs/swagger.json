{
    "swagger": "2.0",
    "info": {
        "description": "Run Artisan flows",
        "title": "Artisan Flow Runner",
        "contact": {
            "name": "gatblau",
            "url": "http://onix.gatblau.org/",
            "email": "onix@gatblau.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.4"
    },
    "paths": {
        "/": {
            "get": {
                "description": "Checks that Artie's HTTP server is listening on the required port.\nUse a liveliness probe.\nIt does not guarantee the server is ready to accept calls.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "General"
                ],
                "summary": "Check that Artie's HTTP API is live",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flow": {
            "post": {
                "description": "uploads an Artisan flow and triggers the flow execution",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Flows"
                ],
                "summary": "Executes an Artisan flow",
                "parameters": [
                    {
                        "description": "the artisan flow to run",
                        "name": "flow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/flow.Flow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/webhook/{namespace}/{flow-name}": {
            "post": {
                "description": "starts a flow execution from a commit in a Git repository",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Flows"
                ],
                "summary": "Launch an existing flow from a Git commit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the kubernetes namespace where the pipeline run is created",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the flow to run",
                        "name": "flow-name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "data.File": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "the file content",
                    "type": "string"
                },
                "description": {
                    "description": "a description of the intended use of this file",
                    "type": "string"
                },
                "name": {
                    "description": "the unique reference for the file",
                    "type": "string"
                },
                "path": {
                    "description": "path to the file within the Artisan registry",
                    "type": "string"
                }
            }
        },
        "data.Input": {
            "type": "object",
            "properties": {
                "file": {
                    "description": "reguired by configuration files",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/data.File"
                    }
                },
                "key": {
                    "description": "required PGP keys",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/data.Key"
                    }
                },
                "secret": {
                    "description": "required string value secrets",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/data.Secret"
                    }
                },
                "var": {
                    "description": "required variables",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/data.Var"
                    }
                }
            }
        },
        "data.Key": {
            "type": "object",
            "properties": {
                "aggregate": {
                    "description": "indicates if this key should be aggregated with other keys",
                    "type": "boolean"
                },
                "description": {
                    "description": "a description of the intended use of this key",
                    "type": "string"
                },
                "name": {
                    "description": "the unique reference for the PGP key",
                    "type": "string"
                },
                "package_group": {
                    "description": "the artisan package group used to select the key",
                    "type": "string"
                },
                "package_name": {
                    "description": "the artisan package name used to select the key",
                    "type": "string"
                },
                "path": {
                    "description": "the path to the key in the Artisan registry",
                    "type": "string"
                },
                "private": {
                    "description": "indicates if the referred key is private or public",
                    "type": "boolean"
                },
                "value": {
                    "description": "the key content",
                    "type": "string"
                }
            }
        },
        "data.Secret": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "a description of the intended use or meaning of this secret",
                    "type": "string"
                },
                "name": {
                    "description": "the unique reference for the secret",
                    "type": "string"
                },
                "value": {
                    "description": "the value of the secret",
                    "type": "string"
                }
            }
        },
        "data.Var": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "flow.Flow": {
            "type": "object",
            "properties": {
                "appIcon": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gitURI": {
                    "type": "string"
                },
                "input": {
                    "$ref": "#/definitions/data.Input"
                },
                "labels": {
                    "description": "a list of labels to document key aspects of the flow execution\nfor example using a target namespace if running in Kubernetes",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/flow.Step"
                    }
                }
            }
        },
        "flow.Step": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "function": {
                    "type": "string"
                },
                "input": {
                    "$ref": "#/definitions/data.Input"
                },
                "name": {
                    "type": "string"
                },
                "package": {
                    "type": "string"
                },
                "packageSource": {
                    "type": "string"
                },
                "privileged": {
                    "type": "boolean"
                },
                "runtime": {
                    "type": "string"
                },
                "runtimeManifest": {
                    "type": "string"
                }
            }
        }
    }
}