definitions:
  data.File:
    properties:
      content:
        description: the file content
        type: string
      description:
        description: a description of the intended use of this file
        type: string
      name:
        description: the unique reference for the file
        type: string
      path:
        description: path to the file within the Artisan registry
        type: string
    type: object
  data.Input:
    properties:
      file:
        description: reguired by configuration files
        items:
          $ref: '#/definitions/data.File'
        type: array
      key:
        description: required PGP keys
        items:
          $ref: '#/definitions/data.Key'
        type: array
      secret:
        description: required string value secrets
        items:
          $ref: '#/definitions/data.Secret'
        type: array
      var:
        description: required variables
        items:
          $ref: '#/definitions/data.Var'
        type: array
    type: object
  data.Key:
    properties:
      aggregate:
        description: indicates if this key should be aggregated with other keys
        type: boolean
      description:
        description: a description of the intended use of this key
        type: string
      name:
        description: the unique reference for the PGP key
        type: string
      package_group:
        description: the artisan package group used to select the key
        type: string
      package_name:
        description: the artisan package name used to select the key
        type: string
      path:
        description: the path to the key in the Artisan registry
        type: string
      private:
        description: indicates if the referred key is private or public
        type: boolean
      value:
        description: the key content
        type: string
    type: object
  data.Secret:
    properties:
      description:
        description: a description of the intended use or meaning of this secret
        type: string
      name:
        description: the unique reference for the secret
        type: string
      value:
        description: the value of the secret
        type: string
    type: object
  data.Var:
    properties:
      default:
        type: string
      description:
        type: string
      name:
        type: string
      required:
        type: boolean
      type:
        type: string
      value:
        type: string
    type: object
  flow.Flow:
    properties:
      appIcon:
        type: string
      description:
        type: string
      gitURI:
        type: string
      input:
        $ref: '#/definitions/data.Input'
      labels:
        additionalProperties:
          type: string
        description: |-
          a list of labels to document key aspects of the flow execution
          for example using a target namespace if running in Kubernetes
        type: object
      name:
        type: string
      steps:
        items:
          $ref: '#/definitions/flow.Step'
        type: array
    type: object
  flow.Step:
    properties:
      description:
        type: string
      function:
        type: string
      input:
        $ref: '#/definitions/data.Input'
      name:
        type: string
      package:
        type: string
      packageSource:
        type: string
      privileged:
        type: boolean
      runtime:
        type: string
      runtimeManifest:
        type: string
    type: object
info:
  contact:
    email: onix@gatblau.org
    name: gatblau
    url: http://onix.gatblau.org/
  description: Run Artisan flows
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Artisan Flow Runner
  version: 0.0.4
paths:
  /:
    get:
      description: |-
        Checks that Artie's HTTP server is listening on the required port.
        Use a liveliness probe.
        It does not guarantee the server is ready to accept calls.
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Check that Artie's HTTP API is live
      tags:
      - General
  /flow:
    post:
      description: creates a new flow from the definition passed in the payload and
        starts its execution
      parameters:
      - description: the artisan flow to run
        in: body
        name: flow
        required: true
        schema:
          $ref: '#/definitions/flow.Flow'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates an Artisan flow
      tags:
      - Flows
  /flow/key/{flow-key}/ns/{namespace}:
    post:
      description: creates a new flow from the definition passed in the payload and
        starts its execution
      parameters:
      - description: the kubernetes namespace where the flow is created
        in: path
        name: namespace
        required: true
        type: string
      - description: the unique key of the flow specification in Onix configuration
          database
        in: path
        name: flow-key
        required: true
        type: string
      - description: any configuration information sent by the client to the execution
          context
        in: body
        name: file
        schema:
          type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Creates an Artisan flow from a flow spec stored as an Onix configuration
        item
      tags:
      - Flows
  /flow/name/{flow-name}/ns/{namespace}:
    post:
      description: starts the execution of a pre-existing flow based on its name and
        the namespace where is located
      parameters:
      - description: the kubernetes namespace where the pipeline run is created
        in: path
        name: namespace
        required: true
        type: string
      - description: the name of the flow to run
        in: path
        name: flow-name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Launch an existing flow (typically, from a Git commit hook)
      tags:
      - Flows
swagger: "2.0"
