app.name="Onix"
app.description="A Configuration Management Database service exposed via Restful endpoints."
server.port=${HTTP_PORT:8080}

spring.application.name=onix

# JDBC DataSource configuration
###############################
# the name of the database used by Onix to store CMDB information
database.name=${DB_NAME:onix}
# the password for the postgres user - required for auto deployment and upgrade operations
database.admin.pwd=${DB_ADMIN_PWD:onix}
# the url of the postgres server to use
database.server.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}
# use remote loading of database scripts?
database.scripts.remote=${DB_SCRIPTS_REMOTE:false}
# the url where database deployment and upgrade scripts are located
database.scripts=${DB_SCRIPTS_URL:https://raw.githubusercontent.com/gatblau/onix/<app_commit>/wapi/src/main/resources}
# whether to initiate an automatic deployment of the database when the ready-ness probe is called for the first time
database.auto.deploy=${DB_AUTO_DEPLOY:true}
# whether to initiate an automatic upgrade of the database when the ready-ness probe is called and the database version
# is not the correct version for the application version being run
database.auto.upgrade=${DB_AUTO_UPGRADE:false}

spring.datasource.url=${database.server.url}/${database.name}?stringtype=unspecified
spring.datasource.username=${DB_USER:onix}
spring.datasource.password=${DB_PWD:onix}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=${DS_PREP_STMT_CACHE_SIZE:250}
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=${DS_PREP_STMT_CACHE_SQL_LIMIT:2048}
spring.datasource.hikari.data-source-properties.cachePrepStmts=${DS_CACHE_PREP_STMTS:true}
spring.datasource.hikari.data-source-properties.useServerPrepStmts=${DS_USE_SERVER_PREP_STMTS:true}

# metrics configuration
#######################
management.endpoint.metrics.enabled=${MGMT_ENDPOINT_METRICS_ENABLED:true}
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# authentication mode (i.e. none, basic, oidc)
wapi.auth.mode=${WAPI_AUTH_MODE:basic}

# basic authentication users - - only applies if AUTH_MODE=basic
wapi.reader.user=${WAPI_READER_USER:reader}
wapi.reader.pwd=${WAPI_READER_PWD:0n1x}
wapi.writer.user=${WAPI_WRITER_USER:writer}
wapi.writer.pwd=${WAPI_WRITER_PWD:0n1x}
wapi.admin.user=${WAPI_ADMIN_USER:admin}
wapi.admin.pwd=${WAPI_ADMIN_PWD:0n1x}

# OpenId Connect configuration - only applies if AUTH_MODE=oidc
##############################
oidc.issuer=${OIDC_ISSUER:undefined}
oidc.jwkUrl=${OIDC_JWKURL:https://dev-447786.okta.com/oauth2/default/v1/keys}
oidc.redirectUri=${OIDC_REDIRECT_URI:undefined}
oidc.userAuthorizationUri=${OIDC_USER_AUTH_URI:undefined}
oidc.accessTokenUri=${OIDC_ACCESS_TOKEN_URI:undefined}
oidc.clientSecret=${OIDC_CLIENT_SECRET:undefined}
oidc.clientId=${OIDC_CLIENT_ID:undefined}
issuer-uri=${oidc.issuer}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${oidc.jwkUrl}

# logging
#########
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.web=DEBUG

# data at rest encryption
#########################
# encryption key 1
wapi.ek.1=${WAPI_EK_1:80FazXaQlpvkfqjCmq/l1wuczeBlQfYtidBcz1aLh6o=} 
# encryption key 2
wapi.ek.2=${WAPI_EK_2:IvRb/0jaKSCHrJNPvzxVbYugVYOk55HpiT5OrVt2n8E=}
# expiry date for the active key
wapi.ek.expiry.date=${WAPI_EK_EXPIRY_DATE:01-01-2100}
# the active key i.e. 1 or 2
wapi.ek.default=${WAPI_EK_ACTIVE:1}

# notification events
#####################
wapi.events.enabled=${WAPI_EVENTS_ENABLED:false}
wapi.events.server.host=${WAPI_EVENTS_SERVER_HOST:localhost}
wapi.events.server.port=${WAPI_EVENTS_SERVER_PORT:5672}
wapi.events.server.user=${WAPI_EVENTS_SERVER_USER:amqpadmin}
wapi.events.server.pwd=${WAPI_EVENTS_SERVER_PWD:amqppassw0rd}
wapi.events.client.retries=${WAPI_EVENTS_CLIENT_RETRIES:10000}
wapi.events.client.backoffperiod=${WAPI_EVENTS_CLIENT_BACKOFFPERIOD:10000}