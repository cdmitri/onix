definitions:
  core.Admission:
    properties:
      active:
        type: boolean
      key:
        type: string
      tag:
        items:
          type: string
        type: array
    type: object
  core.Cmd:
    properties:
      description:
        type: string
      function:
        type: string
      id:
        type: integer
      input:
        $ref: '#/definitions/data.Input'
      name:
        type: string
      package:
        type: string
    type: object
  core.Event:
    properties:
      time:
        type: string
      type:
        description: '0: host up, 1: host down, 2: network up, 3: network down'
        type: integer
    type: object
  core.Registration:
    properties:
      cpus:
        type: integer
      hostname:
        type: string
      machine_id:
        description: github.com/denisbrodbeck/machineid
        type: string
      os:
        type: string
      platform:
        type: string
      total_memory:
        type: number
      virtual:
        type: boolean
    type: object
  data.File:
    properties:
      content:
        description: the file content
        type: string
      description:
        description: a description of the intended use of this file
        type: string
      name:
        description: the unique reference for the file
        type: string
      path:
        description: path to the file within the Artisan registry
        type: string
    type: object
  data.Input:
    properties:
      file:
        description: reguired by configuration files
        items:
          $ref: '#/definitions/data.File'
        type: array
      key:
        description: required PGP keys
        items:
          $ref: '#/definitions/data.Key'
        type: array
      secret:
        description: required string value secrets
        items:
          $ref: '#/definitions/data.Secret'
        type: array
      var:
        description: required variables
        items:
          $ref: '#/definitions/data.Var'
        type: array
    type: object
  data.Key:
    properties:
      aggregate:
        description: indicates if this key should be aggregated with other keys
        type: boolean
      description:
        description: a description of the intended use of this key
        type: string
      name:
        description: the unique reference for the PGP key
        type: string
      package_group:
        description: the artisan package group used to select the key
        type: string
      package_name:
        description: the artisan package name used to select the key
        type: string
      path:
        description: the path to the key in the Artisan registry
        type: string
      private:
        description: indicates if the referred key is private or public
        type: boolean
      value:
        description: the key content
        type: string
    type: object
  data.Secret:
    properties:
      description:
        description: a description of the intended use or meaning of this secret
        type: string
      name:
        description: the unique reference for the secret
        type: string
      value:
        description: the value of the secret
        type: string
    type: object
  data.Var:
    properties:
      default:
        type: string
      description:
        type: string
      name:
        type: string
      required:
        type: boolean
      type:
        type: string
      value:
        type: string
    type: object
info:
  contact:
    email: onix@gatblau.org
    name: gatblau
    url: http://onix.gatblau.org/
  description: Onix Config Manager Control Service for Pilot Host agent
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Pilot Control
  version: 0.0.4
paths:
  /:
    get:
      description: |-
        Checks that Artie's HTTP server is listening on the required port.
        Use a liveliness probe.
        It does not guarantee the server is ready to accept calls.
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Check that Artie's HTTP API is live
      tags:
      - General
  /admission:
    get:
      description: get a list of keys of the hosts admitted into service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Host Admissions
      tags:
      - Admission
    put:
      description: creates a new or updates an existing host admission by allowing
        to specify active status and search tags
      parameters:
      - description: the admission to be set
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/core.Admission'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create or Update a Host Admission
      tags:
      - Admission
  /cmd:
    get:
      description: get a list of all command definitions
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all Command definitions
      tags:
      - Command
    put:
      description: creates a new or updates an existing command definition
      parameters:
      - description: the command definition
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/core.Cmd'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create or Update a Command
      tags:
      - Command
  /cmd/{name}:
    get:
      description: get a specific a command definition
      parameters:
      - description: the unique name for the command to retrieve
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a Command definition
      tags:
      - Command
  /host:
    get:
      description: Returns a list of remote hosts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Hosts
      tags:
      - Host
  /job:
    get:
      description: get all jobs
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Jobs Information
      tags:
      - Job
    post:
      description: create a new job for execution on one or more remote hosts
      parameters:
      - description: the job definition
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/core.Cmd'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a Job
      tags:
      - Job
  /job/{id}:
    get:
      description: get a specific a job information
      parameters:
      - description: the unique id for the job to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Job Information
      tags:
      - Job
  /log:
    post:
      description: log host events (e.g. up, down, connected, disconnected)
      parameters:
      - description: the host logs to post
        in: body
        name: logs
        required: true
        schema:
          items:
            $ref: '#/definitions/core.Event'
          type: array
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Log Events
      tags:
      - Host
  /log/{host-id}:
    get:
      description: get log host events (e.g. up, down, connected, disconnected) by
        specific host
      parameters:
      - description: the unique key for the host
        in: path
        name: host-key
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Events by Host
      tags:
      - Host
  /package:
    get:
      description: get a list of packages in the backing Artisan registry
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Artisan Packages
      tags:
      - Registry
  /package/{name}/api:
    get:
      description: get a list of exported functions and inputs for the specified package
      parameters:
      - description: the fully qualified name of the artisan package having the required
          API
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get the API of an Artisan Package
      tags:
      - Registry
  /ping/{machine_id}:
    post:
      description: submits a ping from a host to the control plane
      parameters:
      - description: the unique key for the host
        in: path
        name: host-key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Ping
      tags:
      - Host
  /region:
    get:
      description: get a list of regions where hosts are deployed
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Regions
      tags:
      - Region
  /region/{region-key}/location:
    get:
      description: get a list of locations within a particular region
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Locations by Region
      tags:
      - Region
  /register:
    post:
      description: registers a new host and its technical details with the service
      parameters:
      - description: the host registration configuration
        in: body
        name: registration-info
        required: true
        schema:
          $ref: '#/definitions/core.Registration'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register a Host
      tags:
      - Host
swagger: "2.0"
