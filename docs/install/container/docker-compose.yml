#
#    Onix CMDB - Copyright (c) 2018-2019 by www.gatblau.org
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#    Unless required by applicable law or agreed to in writing, software distributed under
#    the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
#    either express or implied.
#    See the License for the specific language governing permissions and limitations under the License.
#
#    Contributors to this project, hereby assign copyright in this code to the project,
#    to be licensed under the same terms as the rest of the code.
#
#   Docker Compose file to get the ONIX CMDB up and running
#   use as follows:
#     docker-compose up -d | docker-compose down, stop, start
#     NOTE: after start need to call the readyness probe to deploy the database!
#
version: '3'
services:
  oxdb:
    image: centos/postgresql-10-centos7
    container_name: oxdb
    restart: always
    environment:
      - POSTGRESQL_ADMIN_PASSWORD=${PG_ADMIN_PASSWORD}
    ports:
      - "5432:5432"
  onix:
    image: gatblau/onix-snapshot
    depends_on:
      - oxdb
    container_name: ox
    restart: always
    environment:
      - DB_HOST=oxdb
      - DB_ADMIN_PWD=${PG_ADMIN_PASSWORD}
      - WAPI_AUTH_MODE=${AUTH_MODE}
      - WAPI_ADMIN_USER=${ADMIN_USER}
      - WAPI_ADMIN_PWD=${ADMIN_PWD}
    ports:
      - "8080:8080"
  oxkube:
    image: gatblau/oxkube-snapshot
    depends_on:
      - onix
    container_name: oxku
    restart: always
    environment:
      - OXKU_ID=kube-01
      - OXKU_ONIX_URL=${WAPI_URI}
      - OXKU_CONSUMERS_CONSUMER=webhook
      - OXKU_LOGINLEVEL=${LOGIN_LEVEL}
      - OXKU_ONIX_AUTHMODE=${AUTH_MODE}
      - OXKU_ONIX_USER=${ADMIN_USER}
      - OXKU_ONIX_PASSWORD=${ADMIN_PWD}
    ports:
      - "8000:8000"
  oxwc:
    image: gatblau/oxwc-snapshot
    depends_on:
      - onix
    container_name: oxwc
    restart: always
    environment:
      - WC_OX_WAPI_URI=${WAPI_URI}
      - WC_OX_WAPI_AUTH_MODE=${AUTH_MODE}
    ports:
      - "3000:3000"